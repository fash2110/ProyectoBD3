//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoBD3Entities : DbContext
    {
        public ProyectoBD3Entities()
            : base("name=ProyectoBD3Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<CobroFijo> CobroFijoes { get; set; }
        public virtual DbSet<Contrato> Contratoes { get; set; }
        public virtual DbSet<DBError> DBErrors { get; set; }
        public virtual DbSet<DetalleLlamada> DetalleLlamadas { get; set; }
        public virtual DbSet<Detalle> Detalles { get; set; }
        public virtual DbSet<DetallesECOperador> DetallesECOperadors { get; set; }
        public virtual DbSet<DetalleUsoDato> DetalleUsoDatos { get; set; }
        public virtual DbSet<ElementosDeTipoTarifa> ElementosDeTipoTarifas { get; set; }
        public virtual DbSet<EstadoDeCuentaOperador> EstadoDeCuentaOperadors { get; set; }
        public virtual DbSet<Factura> Facturas { get; set; }
        public virtual DbSet<LlamadaTelefonica> LlamadaTelefonicas { get; set; }
        public virtual DbSet<NoLocal> NoLocals { get; set; }
        public virtual DbSet<Operador> Operadors { get; set; }
        public virtual DbSet<RelacionFamiliar> RelacionFamiliars { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TipoElementoFijo> TipoElementoFijoes { get; set; }
        public virtual DbSet<TipoError> TipoErrors { get; set; }
        public virtual DbSet<TipoLlamadaOperador> TipoLlamadaOperadors { get; set; }
        public virtual DbSet<TipoRelacionesFamiliar> TipoRelacionesFamiliars { get; set; }
        public virtual DbSet<TiposElemento> TiposElementoes { get; set; }
        public virtual DbSet<TiposTarifa> TiposTarifas { get; set; }
        public virtual DbSet<TiposUnidad> TiposUnidads { get; set; }
        public virtual DbSet<UsoDato> UsoDatos { get; set; }
        public virtual DbSet<EstadoDeCuenta> EstadoDeCuentas { get; set; }
    
        public virtual int CargarXmlConfig(string xMLData)
        {
            var xMLDataParameter = xMLData != null ?
                new ObjectParameter("XMLData", xMLData) :
                new ObjectParameter("XMLData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CargarXmlConfig", xMLDataParameter);
        }
    
        public virtual int CargarXmlDatos(string xMLData, ObjectParameter outResultCode)
        {
            var xMLDataParameter = xMLData != null ?
                new ObjectParameter("XMLData", xMLData) :
                new ObjectParameter("XMLData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CargarXmlDatos", xMLDataParameter, outResultCode);
        }
    
        public virtual int PagarFactura(Nullable<int> inIdFactura, Nullable<int> outResultCode)
        {
            var inIdFacturaParameter = inIdFactura.HasValue ?
                new ObjectParameter("inIdFactura", inIdFactura) :
                new ObjectParameter("inIdFactura", typeof(int));
    
            var outResultCodeParameter = outResultCode.HasValue ?
                new ObjectParameter("outResultCode", outResultCode) :
                new ObjectParameter("outResultCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PagarFactura", inIdFacturaParameter, outResultCodeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int cerrarEstadoDeCuenta(ObjectParameter outResultCode)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cerrarEstadoDeCuenta", outResultCode);
        }
    
        public virtual int cerrarFactura(ObjectParameter outResultCode)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cerrarFactura", outResultCode);
        }
    
        public virtual ObjectResult<ListarEstadosDeCuentas_Result> ListarEstadosDeCuentas(Nullable<int> inCodigoEmpresa, ObjectParameter outResultCode)
        {
            var inCodigoEmpresaParameter = inCodigoEmpresa.HasValue ?
                new ObjectParameter("inCodigoEmpresa", inCodigoEmpresa) :
                new ObjectParameter("inCodigoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEstadosDeCuentas_Result>("ListarEstadosDeCuentas", inCodigoEmpresaParameter, outResultCode);
        }
    
        public virtual ObjectResult<ListarLlamadasEstadoDeCuenta_Result> ListarLlamadasEstadoDeCuenta(string inFechaDeEstadoDeCuenta, Nullable<int> inCodigoEmpresa, ObjectParameter outResultCode)
        {
            var inFechaDeEstadoDeCuentaParameter = inFechaDeEstadoDeCuenta != null ?
                new ObjectParameter("inFechaDeEstadoDeCuenta", inFechaDeEstadoDeCuenta) :
                new ObjectParameter("inFechaDeEstadoDeCuenta", typeof(string));
    
            var inCodigoEmpresaParameter = inCodigoEmpresa.HasValue ?
                new ObjectParameter("inCodigoEmpresa", inCodigoEmpresa) :
                new ObjectParameter("inCodigoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarLlamadasEstadoDeCuenta_Result>("ListarLlamadasEstadoDeCuenta", inFechaDeEstadoDeCuentaParameter, inCodigoEmpresaParameter, outResultCode);
        }
    
        public virtual ObjectResult<mostrarDetalles_Result> mostrarDetalles(Nullable<int> inIdFactura, Nullable<int> outResultCode)
        {
            var inIdFacturaParameter = inIdFactura.HasValue ?
                new ObjectParameter("inIdFactura", inIdFactura) :
                new ObjectParameter("inIdFactura", typeof(int));
    
            var outResultCodeParameter = outResultCode.HasValue ?
                new ObjectParameter("outResultCode", outResultCode) :
                new ObjectParameter("outResultCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<mostrarDetalles_Result>("mostrarDetalles", inIdFacturaParameter, outResultCodeParameter);
        }
    }
}
